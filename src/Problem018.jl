"""
# Problem 18
以下の三角形の頂点から下まで移動するとき, その数値の和の最大値は23になる.
     3
    7 4
   2 4 6
  8 5 9 3
この例では 3 + 7 + 4 + 9 = 23.

以下の三角形を頂点から下まで移動するとき, その最大の和を求めよ.

                              75
                            95 64
                          17 47 82
                        18 35 87 10
                      20 04 82 47 65
                    19 01 23 75 03 34
                  88 02 77 73 07 63 67
                99 65 04 28 06 16 70 92
              41 41 26 56 83 40 80 70 33
            41 48 72 33 47 32 37 16 94 29
          53 71 44 65 25 43 91 52 97 51 14
        70 11 33 28 77 73 17 78 39 68 17 57
      91 71 52 38 17 14 91 43 58 50 27 29 48
    63 66 04 68 89 53 67 30 73 16 69 87 40 31
  04 62 98 27 23 09 70 98 73 93 38 53 60 04 23
注: ここではたかだか 16384 通りのルートしかないので, すべてのパターンを試すこともできる. Problem 67 は同じ問題だが100行あるので, 総当りでは解けない. もっと賢い方法が必要である.
"""
module Problem018

    const triangle = [75 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
                      95 64 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
                      17 47 82 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
                      18 35 87 10 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
                      20 04 82 47 65 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
                      19 01 23 75 03 34 -1 -1 -1 -1 -1 -1 -1 -1 -1
                      88 02 77 73 07 63 67 -1 -1 -1 -1 -1 -1 -1 -1
                      99 65 04 28 06 16 70 92 -1 -1 -1 -1 -1 -1 -1
                      41 41 26 56 83 40 80 70 33 -1 -1 -1 -1 -1 -1
                      41 48 72 33 47 32 37 16 94 29 -1 -1 -1 -1 -1
                      53 71 44 65 25 43 91 52 97 51 14 -1 -1 -1 -1
                      70 11 33 28 77 73 17 78 39 68 17 57 -1 -1 -1
                      91 71 52 38 17 14 91 43 58 50 27 29 48 -1 -1
                      63 66 04 68 89 53 67 30 73 16 69 87 40 31 -1
                      04 62 98 27 23 09 70 98 73 93 38 53 60 04 23]

    function solve()
        maximumpath(triangle)
    end

    function maximumpath(triangle)
        T = copy(triangle)
        row, col = size(T)
        for y in row-1:-1:1, x in 1:y
            T[y, x] += max(T[y+1, x], T[y+1, x+1])
        end
        return T[1, 1]
    end

end
